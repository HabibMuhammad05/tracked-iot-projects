const uint8_t digits7x16[] PROGMEM = {7,16,'0',':',
0x07, 0xFC, 0x3F, 0xFE, 0x7F, 0x03, 0xC0, 0x01, 0x80, 0x03, 0xC0, 0xFE, 0x7F, 0xFC, 0x3F,  // Code for char 0
0x07, 0x08, 0x00, 0x0C, 0x00, 0x06, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,  // Code for char 1
0x07, 0x02, 0xE0, 0x03, 0xF8, 0x01, 0x9E, 0x81, 0x87, 0xE3, 0x81, 0x7E, 0x80, 0x1C, 0x80,  // Code for char 2
0x07, 0x02, 0x40, 0x03, 0xC0, 0x81, 0x80, 0x81, 0x80, 0xC3, 0xC1, 0x7E, 0x7F, 0x3C, 0x3E,  // Code for char 3
0x07, 0xC0, 0x03, 0xF8, 0x03, 0x3F, 0x02, 0x07, 0x02, 0x00, 0x02, 0xFC, 0xFF, 0xFC, 0xFF,  // Code for char 4
0x07, 0x7F, 0x40, 0x7F, 0xC0, 0x41, 0x80, 0x41, 0x80, 0xC1, 0xC0, 0x81, 0x7F, 0x01, 0x3F,  // Code for char 5
0x07, 0xFC, 0x3F, 0xFE, 0x7F, 0x43, 0xC0, 0x41, 0x80, 0xC1, 0xC0, 0x83, 0x7F, 0x02, 0x3F,  // Code for char 6
0x07, 0x01, 0x00, 0x01, 0x00, 0x01, 0xF8, 0x01, 0xFF, 0xE1, 0x07, 0xFF, 0x00, 0x1F, 0x00,  // Code for char 7
0x07, 0x3C, 0x3E, 0x7E, 0x7F, 0xC3, 0xC1, 0x81, 0x80, 0xC3, 0xC1, 0x7E, 0x7F, 0x3C, 0x3E,  // Code for char 8
0x07, 0x7C, 0x40, 0xFE, 0xC0, 0x83, 0x81, 0x01, 0x81, 0x03, 0xC1, 0xFE, 0x7F, 0xFC, 0x3F,  // Code for char 9
0x01, 0x20, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   // Code for char :
};

const uint8_t digits5x16rn[] PROGMEM = {5,16,'0',':',
0x05, 0xFE, 0x7F, 0x01, 0x80, 0x01, 0x80, 0xFF, 0xFF, 0xFE, 0x7F,
0x05, 0x04, 0x00, 0x02, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
0x05, 0x02, 0xFF, 0x81, 0x80, 0x81, 0x80, 0xFF, 0x80, 0x7E, 0x80, 
0x05, 0x02, 0x40, 0x81, 0x80, 0x81, 0x80, 0xFF, 0xFF, 0x7E, 0x7F, 
0x05, 0xFF, 0x01, 0x00, 0x01, 0x00, 0x01, 0xFE, 0xFF, 0xFE, 0xFF,
0x05, 0xFF, 0x40, 0x81, 0x80, 0x81, 0x80, 0x81, 0xFF, 0x01, 0x7F,
0x05, 0xFE, 0x7F, 0x81, 0x80, 0x81, 0x80, 0x81, 0xFF, 0x02, 0x7F,
0x05, 0x01, 0x00, 0x01, 0xFC, 0xC1, 0xFF, 0xFF, 0x03, 0x3F, 0x00,
0x05, 0x7E, 0x7F, 0x81, 0x80, 0x81, 0x80, 0xFF, 0xFF, 0x7E, 0x7F,
0x05, 0x7E, 0x40, 0x81, 0x80, 0x81, 0x80, 0xFF, 0xFF, 0xFE, 0x7F,
0x01, 0x20, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

const uint8_t font3x7[] PROGMEM = {5,7,' ','_',
0x02, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char  CA
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char !
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char "
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char #
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char $
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char %
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char &
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char '
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char (
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char )
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char *
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char +
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char ,
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char -
0x01, 0x40, 0x00, 0x00, 0x00, 0x00,      // Code for char .
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char /
0x03, 0x7F, 0x41, 0x7F, 0x00, 0x00,      // Code for char 0
0x03, 0x04, 0x02, 0x7F, 0x00, 0x00,      // Code for char 1
0x03, 0x79, 0x49, 0x4F, 0x00, 0x00,      // Code for char 2
0x03, 0x41, 0x49, 0x7F, 0x00, 0x00,      // Code for char 3
0x03, 0x1F, 0x10, 0x7C, 0x00, 0x00,      // Code for char 4
0x03, 0x4F, 0x49, 0x79, 0x00, 0x00,      // Code for char 5
0x03, 0x7F, 0x49, 0x79, 0x00, 0x00,      // Code for char 6
0x03, 0x01, 0x71, 0x0F, 0x00, 0x00,      // Code for char 7
0x03, 0x7F, 0x49, 0x7F, 0x00, 0x00,      // Code for char 8
0x03, 0x4F, 0x49, 0x7F, 0x00, 0x00,      // Code for char 9
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char :
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char ;
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char <
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char =
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char >
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char ?
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char @
0x03, 0x78, 0x24, 0x78, 0x00, 0x00,      // Code for char A
0x03, 0x7C, 0x54, 0x28, 0x00, 0x00,      // Code for char B
0x03, 0x38, 0x44, 0x44, 0x00, 0x00,      // Code for char C
0x03, 0x7C, 0x44, 0x38, 0x00, 0x00,      // Code for char D
0x03, 0x7C, 0x54, 0x44, 0x00, 0x00,      // Code for char E
0x03, 0x7C, 0x14, 0x04, 0x00, 0x00,      // Code for char F
0x03, 0x38, 0x44, 0x74, 0x00, 0x00,      // Code for char G
0x03, 0x7C, 0x10, 0x7C, 0x00, 0x00,      // Code for char H
0x01, 0x7C, 0x00, 0x00, 0x00, 0x00,      // Code for char I
0x03, 0x44, 0x44, 0x3C, 0x00, 0x00,      // Code for char J
0x03, 0x7C, 0x10, 0x6C, 0x00, 0x00,      // Code for char K
0x03, 0x7C, 0x40, 0x40, 0x00, 0x00,      // Code for char L
0x05, 0x78, 0x04, 0x38, 0x04, 0x78,      // Code for char M
0x03, 0x7C, 0x04, 0x78, 0x00, 0x00,      // Code for char N
0x03, 0x38, 0x44, 0x38, 0x00, 0x00,      // Code for char O
0x03, 0x7C, 0x24, 0x18, 0x00, 0x00,      // Code for char P
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char Q
0x03, 0x7C, 0x24, 0x58, 0x00, 0x00,      // Code for char R
0x03, 0x48, 0x54, 0x24, 0x00, 0x00,      // Code for char S
0x03, 0x04, 0x7C, 0x04, 0x00, 0x00,      // Code for char T
0x03, 0x3C, 0x40, 0x7C, 0x00, 0x00,      // Code for char U
0x03, 0x3C, 0x40, 0x3C, 0x00, 0x00,      // Code for char V
0x05, 0x3C, 0x40, 0x38, 0x40, 0x3C,      // Code for char W
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char X
0x03, 0x1C, 0x70, 0x1C, 0x00, 0x00,      // Code for char Y
0x03, 0x64, 0x54, 0x4C, 0x00, 0x00,      // Code for char Z
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char [
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char BackSlash
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char ]
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char ^
0x01, 0x00, 0x00, 0x00, 0x00, 0x00,      // Code for char _
};


const uint8_t digits3x5[] PROGMEM = { 3,5,'0','9',
0x03, 0xF8, 0x88, 0xF8, 
//0x02, 0x10, 0xF8, 0x00, 
0x03, 0, 0x10, 0xF8, 
0x03, 0xE8, 0xA8, 0xB8, 
0x03, 0x88, 0xA8, 0xF8, 
0x03, 0x38, 0x20, 0xF8, 
0x03, 0xB8, 0xA8, 0xE8, 
0x03, 0xF8, 0xA8, 0xE8, 
0x03, 0x08, 0x08, 0xF8, 
0x03, 0xF8, 0xA8, 0xF8, 
0x03, 0xB8, 0xA8, 0xF8, 
};

const uint8_t digits5x8rn[] PROGMEM = { 5,8,' ',':',
0, 0,0,0,0,0, // space
1, B01011111, B00000000, B00000000,0,0,  // !
3, B00000011, B00000000, B00000011,0,0, // "
3, B00000010, B01111111, B00000010,0,0, // # up
3, B00100000, B01111111, B00100000,0,0, // $ down
3, B01100001, B00011100, B01000011,0,0, // %
0, 0,0,0,0,0, // &
1, B00000001, B00000000, B00000000,0,0, // '
2, B00111110, B01000001, B00000000,0,0, // (
2, B01000001, B00111110, B00000000,0,0, // )
0, 0,0,0,0,0, // *
5, B00001000, B00001000, B00111110, B00001000, B00001000, // +
2, B10000000, B01000000, B00000000,0,0, // ,
5, B00001000, B00001000, B00001000, B00001000, B00001000, // -
1, B01000000, B00000000, B00000000,0,0, // .
3, B01100000, B00011100, B00000011,0,0, // /
0x05, 0x7E, 0x81, 0x81, 0xFF, 0x7E, 
0x05, 0x04, 0x02, 0xFF, 0xFF, 0x00, 
0x05, 0xF1, 0x89, 0x89, 0x8F, 0x86, 
0x05, 0x81, 0x89, 0x89, 0xFF, 0x76, 
0x05, 0x1F, 0x10, 0x10, 0xFE, 0xFE, 
0x05, 0x8F, 0x89, 0x89, 0xF9, 0x71, 
0x05, 0x7E, 0x89, 0x89, 0xF9, 0x70, 
0x05, 0x01, 0xC1, 0xF1, 0x3F, 0x0F, 
0x05, 0x76, 0x89, 0x89, 0xFF, 0x76, 
0x05, 0x0E, 0x91, 0x91, 0xFF, 0x7E, 
1, B00100100, B00000000, B00000000, B00000000, B00000000, // :
};

const uint8_t fontBesar[] PROGMEM = {5, 7, ' ', '_', // Width, Height, First char, Last char
0x06, 0x00, 0x00, 0x00, 0x00, 0x00, // space
0x01, 0x5F, 0x00, 0x00, 0x00, 0x00, // !
0x03, 0x03, 0x00, 0x03, 0x00, 0x00, // "
0x05, 0x14, 0x3E, 0x14, 0x3E, 0x14, // #
0x04, 0x24, 0x6A, 0x2B, 0x12, 0x00, // $
0x05, 0x63, 0x13, 0x08, 0x64, 0x63, // %
0x05, 0x36, 0x49, 0x56, 0x20, 0x50, // &
0x01, 0x03, 0x00, 0x00, 0x00, 0x00, // '
0x03, 0x1C, 0x22, 0x41, 0x00, 0x00, // (
0x03, 0x41, 0x22, 0x1C, 0x00, 0x00, // )
0x05, 0x28, 0x18, 0x0E, 0x18, 0x28, // *
0x05, 0x08, 0x08, 0x3E, 0x08, 0x08, // +
0x02, 0xB0, 0x70, 0x00, 0x00, 0x00, // ,
0x04, 0x08, 0x08, 0x08, 0x08, 0x00, // -
0x01, 0x40, 0x00, 0x00, 0x00, 0x00, // .
0x03, 0x60, 0x1C, 0x03, 0x00, 0x00, // /
0x04, 0x3E, 0x41, 0x41, 0x3E, 0x00, // 0
0x04, 0x42, 0x7F, 0x40, 0x00, 0x00, // 1
0x04, 0x62, 0x51, 0x49, 0x46, 0x00, // 2
0x04, 0x22, 0x41, 0x49, 0x36, 0x00, // 3
0x04, 0x18, 0x14, 0x12, 0x7F, 0x00, // 4
0x04, 0x27, 0x45, 0x45, 0x39, 0x00, // 5
0x04, 0x3E, 0x49, 0x49, 0x32, 0x00, // 6
0x04, 0x61, 0x11, 0x09, 0x07, 0x00, // 7
0x04, 0x36, 0x49, 0x49, 0x36, 0x00, // 8
0x04, 0x26, 0x49, 0x49, 0x3E, 0x00, // 9
0x01, 0x44, 0x00, 0x00, 0x00, 0x00, // :
0x02, 0x80, 0x50, 0x00, 0x00, 0x00, // ;
0x03, 0x10, 0x28, 0x44, 0x00, 0x00, // <
0x03, 0x14, 0x14, 0x14, 0x00, 0x00, // =
0x03, 0x44, 0x28, 0x10, 0x00, 0x00, // >
0x04, 0x02, 0x59, 0x09, 0x06, 0x00, // ?
0x05, 0x3E, 0x49, 0x55, 0x5D, 0x0E, // @
0x04, 0x7E, 0x11, 0x11, 0x7E, 0x00, // A
0x04, 0x7F, 0x49, 0x49, 0x36, 0x00, // B
0x04, 0x3E, 0x41, 0x41, 0x22, 0x00, // C
0x04, 0x7F, 0x41, 0x41, 0x3E, 0x00, // D
0x04, 0x7F, 0x49, 0x49, 0x41, 0x00, // E
0x04, 0x7F, 0x09, 0x09, 0x01, 0x00, // F
0x04, 0x3E, 0x41, 0x49, 0x7A, 0x00, // G
0x04, 0x7F, 0x08, 0x08, 0x7F, 0x00, // H
0x03, 0x41, 0x7F, 0x41, 0x00, 0x00, // I
0x04, 0x30, 0x40, 0x41, 0x3F, 0x00, // J
0x04, 0x7F, 0x08, 0x14, 0x63, 0x00, // K
0x04, 0x7F, 0x40, 0x40, 0x40, 0x00, // L
0x05, 0x7F, 0x02, 0x0C, 0x02, 0x7F, // M
0x05, 0x7F, 0x04, 0x08, 0x10, 0x7F, // N
0x04, 0x3E, 0x41, 0x41, 0x3E, 0x00, // O
0x04, 0x7F, 0x09, 0x09, 0x06, 0x00, // P
0x04, 0x3E, 0x41, 0x41, 0xBE, 0x00, // Q
0x04, 0x7F, 0x09, 0x09, 0x76, 0x00, // R
0x04, 0x26, 0x49, 0x49, 0x32, 0x00, // S
0x05, 0x01, 0x01, 0x7F, 0x01, 0x01, // T
0x04, 0x3F, 0x40, 0x40, 0x3F, 0x00, // U
0x05, 0x0F, 0x30, 0x40, 0x30, 0x0F, // V
0x05, 0x3F, 0x40, 0x38, 0x40, 0x3F, // W
0x05, 0x63, 0x14, 0x08, 0x14, 0x63, // X
0x05, 0x07, 0x08, 0x70, 0x08, 0x07, // Y
0x04, 0x61, 0x51, 0x49, 0x47, 0x00, // Z
0x02, 0x7F, 0x41, 0x00, 0x00, 0x00, // [
0x04, 0x01, 0x06, 0x18, 0x60, 0x00, // backslash
0x02, 0x41, 0x7F, 0x00, 0x00, 0x00, // ]
0x03, 0x02, 0x01, 0x02, 0x00, 0x00, // ^
0x04, 0x40, 0x40, 0x40, 0x40, 0x00, // _
};
